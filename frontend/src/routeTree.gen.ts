/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ResendVerifyEmailImport } from './routes/resend-verify-email'
import { Route as HomeImport } from './routes/_home'
import { Route as AuthImport } from './routes/_auth'
import { Route as AdminImport } from './routes/_admin'
import { Route as IndexImport } from './routes/index'
import { Route as VerifyAccountUidImport } from './routes/verify-account.$uid'
import { Route as HomeHomeIndexImport } from './routes/_home/home.index'
import { Route as AdminAdminIndexImport } from './routes/_admin/admin.index'
import { Route as HomeHomeUserImport } from './routes/_home/home.user'
import { Route as AuthAuthRegisterImport } from './routes/_auth/auth.register'
import { Route as AuthAuthLoginImport } from './routes/_auth/auth.login'
import { Route as AdminAdminVigilantesImport } from './routes/_admin/admin.vigilantes'
import { Route as AdminAdminSedesImport } from './routes/_admin/admin.sedes'
import { Route as AdminAdminEstacionamientosImport } from './routes/_admin/admin.estacionamientos'

// Create/Update Routes

const ResendVerifyEmailRoute = ResendVerifyEmailImport.update({
  path: '/resend-verify-email',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/_home',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const VerifyAccountUidRoute = VerifyAccountUidImport.update({
  path: '/verify-account/$uid',
  getParentRoute: () => rootRoute,
} as any)

const HomeHomeIndexRoute = HomeHomeIndexImport.update({
  path: '/home/',
  getParentRoute: () => HomeRoute,
} as any)

const AdminAdminIndexRoute = AdminAdminIndexImport.update({
  path: '/admin/',
  getParentRoute: () => AdminRoute,
} as any)

const HomeHomeUserRoute = HomeHomeUserImport.update({
  path: '/home/user',
  getParentRoute: () => HomeRoute,
} as any)

const AuthAuthRegisterRoute = AuthAuthRegisterImport.update({
  path: '/auth/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAuthLoginRoute = AuthAuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => AuthRoute,
} as any)

const AdminAdminVigilantesRoute = AdminAdminVigilantesImport.update({
  path: '/admin/vigilantes',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminSedesRoute = AdminAdminSedesImport.update({
  path: '/admin/sedes',
  getParentRoute: () => AdminRoute,
} as any)

const AdminAdminEstacionamientosRoute = AdminAdminEstacionamientosImport.update(
  {
    path: '/admin/estacionamientos',
    getParentRoute: () => AdminRoute,
  } as any,
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/resend-verify-email': {
      id: '/resend-verify-email'
      path: '/resend-verify-email'
      fullPath: '/resend-verify-email'
      preLoaderRoute: typeof ResendVerifyEmailImport
      parentRoute: typeof rootRoute
    }
    '/verify-account/$uid': {
      id: '/verify-account/$uid'
      path: '/verify-account/$uid'
      fullPath: '/verify-account/$uid'
      preLoaderRoute: typeof VerifyAccountUidImport
      parentRoute: typeof rootRoute
    }
    '/_admin/admin/estacionamientos': {
      id: '/_admin/admin/estacionamientos'
      path: '/admin/estacionamientos'
      fullPath: '/admin/estacionamientos'
      preLoaderRoute: typeof AdminAdminEstacionamientosImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/sedes': {
      id: '/_admin/admin/sedes'
      path: '/admin/sedes'
      fullPath: '/admin/sedes'
      preLoaderRoute: typeof AdminAdminSedesImport
      parentRoute: typeof AdminImport
    }
    '/_admin/admin/vigilantes': {
      id: '/_admin/admin/vigilantes'
      path: '/admin/vigilantes'
      fullPath: '/admin/vigilantes'
      preLoaderRoute: typeof AdminAdminVigilantesImport
      parentRoute: typeof AdminImport
    }
    '/_auth/auth/login': {
      id: '/_auth/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthAuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/auth/register': {
      id: '/_auth/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthAuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_home/home/user': {
      id: '/_home/home/user'
      path: '/home/user'
      fullPath: '/home/user'
      preLoaderRoute: typeof HomeHomeUserImport
      parentRoute: typeof HomeImport
    }
    '/_admin/admin/': {
      id: '/_admin/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminAdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/_home/home/': {
      id: '/_home/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeHomeIndexImport
      parentRoute: typeof HomeImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminAdminEstacionamientosRoute,
    AdminAdminSedesRoute,
    AdminAdminVigilantesRoute,
    AdminAdminIndexRoute,
  }),
  AuthRoute: AuthRoute.addChildren({
    AuthAuthLoginRoute,
    AuthAuthRegisterRoute,
  }),
  HomeRoute: HomeRoute.addChildren({ HomeHomeUserRoute, HomeHomeIndexRoute }),
  ResendVerifyEmailRoute,
  VerifyAccountUidRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_admin",
        "/_auth",
        "/_home",
        "/resend-verify-email",
        "/verify-account/$uid"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_admin": {
      "filePath": "_admin.tsx",
      "children": [
        "/_admin/admin/estacionamientos",
        "/_admin/admin/sedes",
        "/_admin/admin/vigilantes",
        "/_admin/admin/"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth/login",
        "/_auth/auth/register"
      ]
    },
    "/_home": {
      "filePath": "_home.tsx",
      "children": [
        "/_home/home/user",
        "/_home/home/"
      ]
    },
    "/resend-verify-email": {
      "filePath": "resend-verify-email.tsx"
    },
    "/verify-account/$uid": {
      "filePath": "verify-account.$uid.tsx"
    },
    "/_admin/admin/estacionamientos": {
      "filePath": "_admin/admin.estacionamientos.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/sedes": {
      "filePath": "_admin/admin.sedes.tsx",
      "parent": "/_admin"
    },
    "/_admin/admin/vigilantes": {
      "filePath": "_admin/admin.vigilantes.tsx",
      "parent": "/_admin"
    },
    "/_auth/auth/login": {
      "filePath": "_auth/auth.login.tsx",
      "parent": "/_auth"
    },
    "/_auth/auth/register": {
      "filePath": "_auth/auth.register.tsx",
      "parent": "/_auth"
    },
    "/_home/home/user": {
      "filePath": "_home/home.user.tsx",
      "parent": "/_home"
    },
    "/_admin/admin/": {
      "filePath": "_admin/admin.index.tsx",
      "parent": "/_admin"
    },
    "/_home/home/": {
      "filePath": "_home/home.index.tsx",
      "parent": "/_home"
    }
  }
}
ROUTE_MANIFEST_END */
